{"version":3,"file":"static/js/660.6c1d83be.chunk.js","mappings":"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","sources":["pages/ToDo.js"],"sourcesContent":["import axios from 'axios';\r\nimport React, { useEffect, useState } from 'react';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport { PopoverBody, Table } from 'react-bootstrap';\r\nimport \"../pages/ToDo.css\"\r\n\r\n\r\n\r\nconst ToDo = () => {\r\n  const [show, setShow] = useState(false);\r\n  const [todo, setTodo] = useState(null);\r\n  const [todoData, settodoData] = useState([]);\r\n  const [editToggle, seteditToggle] = useState(false);\r\n  const [rowindex, setRowindex] = useState(null);\r\n  const [edittodo, setedittodo] = useState(null);\r\n  const [search, setsearch] = useState('');\r\n\r\n\r\n\r\n\r\n\r\n  const searchbar = todoData.filter((item) => {\r\n\r\n    if (search === \"\") {\r\n      return item\r\n    }\r\n\r\n    else if (item.name?.toLowerCase().includes(search.toLowerCase())) {\r\n      return item\r\n    }\r\n\r\n  })\r\n\r\n\r\n  useEffect(() => {\r\n    getTodo()\r\n  }, [])\r\n\r\n\r\n\r\n\r\n\r\n  // =============================todo-status{bar========================================}\r\n\r\n  const pcount = todoData.filter((item) => item.status === \"pending\").length\r\n  const Ccount = todoData.filter((item) => item.status === \"completed\").length\r\n\r\n\r\n \r\n\r\n\r\n\r\n  /*  */\r\n  const handleClose = () => setShow(false);\r\n  const handleShow = () => setShow(true);\r\n  const submitTodo = () => {\r\n    let body = {\r\n      todo: todo,\r\n      status: \"pending\",\r\n      createdAt: new Date().toDateString(),\r\n      Assigntime: `${new Date().getHours()}:${new Date().getMinutes()}`,\r\n      updateAt: null,\r\n      UpdatedTime: null\r\n    }\r\n\r\n    // ============post kiya h ===============================================\r\n    axios.post('http://localhost:4300/todo', body).then((res) => {\r\n      if (res) {\r\n\r\n        handleClose()\r\n        getTodo()\r\n      }\r\n\r\n    }).catch((err) => console.log(err))\r\n  }\r\n\r\n\r\n  // =========================get kiya h ======================================================\r\n\r\n  const getTodo = () => {\r\n    axios.get('http://localhost:4300/todo').then((res) => settodoData(res.data)).catch((err) => console.log(err))\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n  const markasdone = (e, item) => {\r\n\r\n    const { checked } = e.target;\r\n    const { id } = item;\r\n    var body;\r\n  \r\n\r\n\r\n\r\n\r\n\r\n    if (checked) {\r\n      body = {\r\n        status: \"completed\",\r\n        updateAt: new Date().toDateString(),\r\n        UpdatedTime: `${new Date().getHours()}:${new Date().getMinutes()}`,\r\n\r\n      }\r\n    } else {\r\n      body = {\r\n        status: \"pending\",\r\n        updateAt: null,\r\n        UpdatedTime: null,\r\n\r\n      }\r\n    }\r\n\r\n    // ================================patch method====================================\r\n    axios.patch(`http://localhost:4300/todo/${id}`, body).then((res) => {\r\n      getTodo()\r\n\r\n\r\n    }).catch((err) => console.log(err))\r\n\r\n  }\r\n\r\n  // ======================delete kiya h =================================================\r\n  const deleteTodo = (item) => {\r\n    const { id } = item\r\n    axios.delete(`http://localhost:4300/todo/${id}`).then((res) => getTodo()).catch((err) => console.log(err))\r\n\r\n\r\n  }\r\n  //=========================== udate ki api ================================================\r\n  const edittodosubmit = (item) => {\r\n    const { id } = item;\r\n    let body = {\r\n      todo: edittodo ? edittodo : item.todo\r\n    }\r\n    axios.patch(`http://localhost:4300/todo/${id}`, body).then((res) => {\r\n\r\n      setedittodo(null);\r\n      setRowindex(null);\r\n      seteditToggle(false);\r\n      getTodo();\r\n    }).catch((err) => {\r\n      console.log(err);\r\n\r\n    })\r\n  }\r\n  useEffect(() => {\r\n    getTodo()\r\n  }, [])\r\n\r\n\r\n\r\n  return (\r\n    <div className=\"main-content\">\r\n      <div className=\"page-content\">\r\n        <div className=\"container-fluid\">\r\n          {/* <!-- start page title --> */}\r\n          <div className=\"row\">\r\n            <div className=\"col-12\">\r\n              <div className=\"page-title-box d-sm-flex align-items-center justify-content-between\">\r\n                <h4 className=\"mb-sm-0 font-size-18\">To Do</h4>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          {/*================================ start from here ============ */}\r\n          <div className=' d-flex justify-content-end'>\r\n\r\n\r\n            <input type='search' className='srch-inpt' /><span><Button className='srch-inpt-1' onInput={(e) => setsearch(e.target.value)}>search</Button></span>\r\n\r\n\r\n\r\n\r\n            <button className='mx-1 btn btn-sm btn-primary' onClick={handleShow}>add todo\r\n            </button>\r\n            <button className='mx-2 btn btn-sm btn-success'  >COMPLETED = {Ccount}\r\n            </button>\r\n            <button className='mx-1 btn btn-sm btn-warning'>PANDING = {pcount}\r\n            </button>\r\n\r\n\r\n          </div>\r\n          {/* {================= modal code start========================} */}\r\n\r\n          <>\r\n            <Modal show={show} onHide={handleClose}>\r\n              <Modal.Header closeButton>\r\n                <Modal.Title>Create ToDo</Modal.Title>\r\n              </Modal.Header>\r\n              <Modal.Body> <input className='form-control' placeholder='todo....' onChange={(e) => setTodo(e.target.value)} /></Modal.Body>\r\n              <Modal.Footer>\r\n                <Button variant=\"secondary\" onClick={handleClose}>\r\n                  Close\r\n                </Button>\r\n                <Button variant=\"primary\" onClick={submitTodo}>\r\n                  Save\r\n                </Button>\r\n              </Modal.Footer>\r\n            </Modal>\r\n          </>\r\n          {/* modals code end */}\r\n          {/* ===========================================Table code Start====================================================== */}\r\n\r\n\r\n          <Table striped bordered hover className='mt-4'>\r\n            <thead>\r\n              <tr>\r\n                <th>Id</th>\r\n                <th>Mark as done </th>\r\n                <th>Todo</th>\r\n                <th>Status</th>\r\n                <th>createdAt</th>\r\n                <th>Assigntime</th>\r\n                <th>Updated Time</th>\r\n                <th>UpdatedAt</th>\r\n\r\n                <th>Action</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {\r\n\r\n\r\n\r\n\r\n\r\n                todoData.map((item, index) => {\r\n                  return (\r\n                    <tr>\r\n                      <td>{item.id}</td>\r\n                      {/* checkbox ka  code  */}\r\n                      <td><input type='checkbox' defaultChecked={item.status == \"completed\"} onClick={(e) => markasdone(e, item)} /></td>\r\n                      {/* checked ka code end */}\r\n\r\n                      {/* edit karvana ka liya  */}\r\n                      <td>{\r\n                        editToggle && rowindex === index ?\r\n                          <input defaultValue={item.todo} onChange={(e) => setedittodo(e.target.value)} />\r\n                          :\r\n                          item.todo\r\n\r\n\r\n                      }</td>\r\n\r\n                      {/* edit karvana ka liya code end */}\r\n                      <td className={item.status === 'pending' ? 'text-primary' : item.status === 'completed' && 'text-success'}>{item.status}</td>\r\n\r\n                      <td>{item.createdAt}</td>\r\n\r\n                      <td>{item.Assigntime?.split(':')[0] < 12 ? item.Assigntime + \" AM\" : item.Assigntime + \"PM\"\r\n                      }</td>\r\n                      <td>{item.UpdatedTime ? item.UpdatedTime.split(':')[0] < 12 ? item.UpdatedTime + \" AM\" : item.UpdatedTime + \" PM\" : '-'}</td>\r\n\r\n                      <td>{item.updateAt ? item.updateAt : '-'}</td>\r\n\r\n\r\n                      <td>\r\n                        <>\r\n                          {\r\n\r\n                            editToggle && rowindex === index ?\r\n                              (\r\n                                <>\r\n                                  <button className='btn btn-sm btn-danger mx-3' onClick={() => seteditToggle(false)} >Cancel</button>\r\n                                  <button className=' btn btn-sm btn-success' onClick={() => edittodosubmit(item)}>Save</button>\r\n\r\n\r\n\r\n                                </>\r\n                              ) :\r\n                              (\r\n                                <>\r\n                                  <button className='btn btn-sm btn-danger mx-3' onClick={() => deleteTodo(item)} >Delete</button>\r\n                                  <button disabled={item.status === \"completed\"} className=' btn btn-sm btn-success' onClick={() => { setRowindex(index); seteditToggle(true) }}>Edit</button>\r\n\r\n\r\n\r\n\r\n                                </>\r\n\r\n                              )\r\n                          }\r\n\r\n\r\n                        </>\r\n                      </td>\r\n                    </tr>\r\n\r\n\r\n                  )\r\n\r\n                })\r\n\r\n\r\n\r\n\r\n              }\r\n\r\n\r\n            </tbody>\r\n          </Table>\r\n          {/* table code ends */}\r\n\r\n\r\n          {/* end here  */}\r\n        </div>\r\n\r\n      </div>\r\n\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ToDo\r\n\r\n\r\n\r\n\r\n\r\n"],"names":["_useState","useState","_useState2","_slicedToArray","show","setShow","_useState3","_useState4","todo","setTodo","_useState5","_useState6","todoData","settodoData","_useState7","_useState8","editToggle","seteditToggle","_useState9","_useState10","rowindex","setRowindex","_useState11","_useState12","edittodo","setedittodo","_useState13","_useState14","search","setsearch","filter","item","_item$name","name","toLowerCase","includes","useEffect","getTodo","pcount","status","length","Ccount","handleClose","axios","then","res","data","catch","err","console","log","_jsx","className","children","_jsxs","type","Button","onInput","e","target","value","onClick","_Fragment","Modal","onHide","closeButton","placeholder","onChange","variant","body","createdAt","Date","toDateString","Assigntime","concat","getHours","getMinutes","updateAt","UpdatedTime","Table","striped","bordered","hover","map","index","_item$Assigntime","id","defaultChecked","checked","markasdone","defaultValue","split","edittodosubmit","deleteTodo","disabled"],"sourceRoot":""}